version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: abandoned-by-me-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-abandoned_by_me}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # SvelteKit Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: abandoned-by-me-app
    restart: unless-stopped
    ports:
      - 3456
    environment:
      NODE_ENV: production
      # Database connection
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-abandoned_by_me}
      
      # No GitHub OAuth configuration needed - users provide their own tokens
      
      # Application settings
      DEBUG: ${DEBUG:-false}
      
      # Session/Security
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      COOKIE_SECRET: ${COOKIE_SECRET:-your-cookie-secret-key}
      
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3456/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: abandoned-by-me-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge